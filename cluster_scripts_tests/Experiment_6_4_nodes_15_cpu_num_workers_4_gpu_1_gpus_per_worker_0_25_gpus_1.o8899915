Allocate Nodes = <hpc-g04-node02 hpc-g04-node01 hpc-g01-node02 hpc-g02-node02>
set up ray cluster...


Working with node hpc-g04-node02
first allocate node - use as headnode ...
2022-10-05 10:35:14,860	INFO scripts.py:357 -- Using IP address 192.168.115.44 for this node.
2022-10-05 10:35:14,865	INFO resource_spec.py:212 -- Starting Ray with 425.39 GiB memory available for workers and up to 186.26 GiB for objects. You can adjust these settings with ray.init(memory=<bytes>, object_store_memory=<bytes>).
2022-10-05 10:35:15,861	INFO services.py:1170 -- View the Ray dashboard at [1m[32mlocalhost:8265[39m[22m
2022-10-05 10:35:15,900	INFO scripts.py:387 -- 
Started Ray on this node. You can add additional nodes to the cluster by calling

    ray start --address='192.168.115.44:3681' --redis-password='fae94863-a4dd-49d2-a559-87ae3de02026'

from the node you wish to add. You can connect a driver to the cluster from Python by running

    import ray
    ray.init(address='auto', redis_password='fae94863-a4dd-49d2-a559-87ae3de02026')

If you have trouble connecting from a different machine, check that your firewall is configured properly. If you wish to terminate the processes that have been started, run

    ray stop

Working with node hpc-g04-node01
then allocate other nodes:  1
node NAME: hpc-g04-node01.unitn.it
node IP: 192.168.115.24
dest IP: 192.168.115.44:3681
2022-10-05 10:35:23,894	INFO scripts.py:429 -- Using IP address 192.168.115.24 for this node.
2022-10-05 10:35:23,897	INFO resource_spec.py:212 -- Starting Ray with 529.44 GiB memory available for workers and up to 186.26 GiB for objects. You can adjust these settings with ray.init(memory=<bytes>, object_store_memory=<bytes>).
2022-10-05 10:35:23,919	INFO scripts.py:438 -- 
Started Ray on this node. If you wish to terminate the processes that have been started, run

    ray stop
exiting hpc-g04-node01.unitn.it

Working with node hpc-g01-node02
then allocate other nodes:  2
node NAME: hpc-g01-node02.unitn.it
node IP: 192.168.115.93
dest IP: 192.168.115.44:3681
2022-10-05 10:35:33,837	INFO scripts.py:429 -- Using IP address 192.168.115.93 for this node.
2022-10-05 10:35:33,840	INFO resource_spec.py:212 -- Starting Ray with 171.48 GiB memory available for workers and up to 73.49 GiB for objects. You can adjust these settings with ray.init(memory=<bytes>, object_store_memory=<bytes>).
2022-10-05 10:35:33,841	WARNING services.py:1494 -- WARNING: The object store is using /tmp instead of /dev/shm because /dev/shm has only 55419244544 bytes available. This may slow down performance! You may be able to free up space by deleting files in /dev/shm or terminating any running plasma_store_server processes. If you are inside a Docker container, you may need to pass an argument with the flag '--shm-size' to 'docker run'.
2022-10-05 10:35:33,859	INFO scripts.py:438 -- 
Started Ray on this node. If you wish to terminate the processes that have been started, run

    ray stop
exiting hpc-g01-node02.unitn.it

Working with node hpc-g02-node02
then allocate other nodes:  3
node NAME: hpc-g02-node02.unitn.it
node IP: 192.168.115.10
dest IP: 192.168.115.44:3681
2022-10-05 10:35:43,816	INFO scripts.py:429 -- Using IP address 192.168.115.10 for this node.
2022-10-05 10:35:43,819	INFO resource_spec.py:212 -- Starting Ray with 218.46 GiB memory available for workers and up to 93.64 GiB for objects. You can adjust these settings with ray.init(memory=<bytes>, object_store_memory=<bytes>).
2022-10-05 10:35:43,819	WARNING services.py:1494 -- WARNING: The object store is using /tmp instead of /dev/shm because /dev/shm has only 68429537280 bytes available. This may slow down performance! You may be able to free up space by deleting files in /dev/shm or terminating any running plasma_store_server processes. If you are inside a Docker container, you may need to pass an argument with the flag '--shm-size' to 'docker run'.
2022-10-05 10:35:43,836	INFO scripts.py:438 -- 
Started Ray on this node. If you wish to terminate the processes that have been started, run

    ray stop
exiting hpc-g02-node02.unitn.it

done, now launching python program
Inside covid19_components.py: 1 GPUs are available.
Warning: The 'WarpDrive' package is not found and cannot be used! If you wish to use WarpDrive, please run 'pip install rl-warp-drive' first.
Inside covid19_env.py: 1 GPUs are available.
Warning: The 'WarpDrive' package is not found and cannot be used! If you wish to use WarpDrive, please run 'pip install rl-warp-drive' first.
2022-10-05 10:36:46,550	WARNING worker.py:809 -- When connecting to an existing cluster, _internal_config must match the cluster's _internal_config.
2022-10-05 10:36:46,581 seed (final): 16926000
2022-10-05 10:36:46,643	INFO trainer.py:421 -- Tip: set 'eager': true or the --eager flag to enable TensorFlow eager execution
2022-10-05 10:36:46,878	INFO trainer.py:580 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
2022-10-05 10:37:10,097	INFO trainable.py:180 -- _setup took 23.221 seconds. If your trainable is slow to initialize, consider setting reuse_actors=True to reduce actor creation overheads.
2022-10-05 10:37:10,097	INFO trainable.py:217 -- Getting current IP.
2022-10-05 10:37:23,718	INFO trainable.py:180 -- _setup took 13.534 seconds. If your trainable is slow to initialize, consider setting reuse_actors=True to reduce actor creation overheads.
2022-10-05 10:37:23,718	INFO trainable.py:217 -- Getting current IP.
2022-10-05 10:37:23,742 Not restoring trainer...
2022-10-05 10:37:23,743 Starting with fresh agent TF weights.
2022-10-05 10:37:23,743 Starting with fresh planner TF weights.
Training
-- PPO Agents -- Steps done: 0
2022-10-05 10:40:45,581 Iter 1: steps this-iter 4000 total 4000 -> 3/5000 episodes done
2022-10-05 10:40:45,587 custom_metrics: {}
date: 2022-10-05_10-40-45
done: false
episode_len_mean: 1000.0
episode_reward_max: 312.35697475023346
episode_reward_mean: 259.18771860359385
episode_reward_min: 196.61612633726165
episodes_this_iter: 3
episodes_total: 3
experiment_id: d7b36f961143499f822fc66426c5a7be
hostname: hpc-g04-node02.unitn.it
info:
  grad_time_ms: 153137.281
  learner:
    agent_policy:
      cur_kl_coeff: 0.0
      cur_lr: 0.0003000000142492354
      entropy: 1.9713317155838013
      entropy_coeff: 0.02500000037252903
      kl: 0.1289193332195282
      model: {}
      policy_loss: -0.18479321897029877
      total_loss: -0.17886732518672943
      vf_explained_var: 0.8669516444206238
      vf_loss: 1.1041840314865112
  load_time_ms: 1705.272
  num_steps_sampled: 4000
  num_steps_trained: 16000
  sample_time_ms: 38616.249
  update_time_ms: 7017.713
iterations_since_restore: 1
node_ip: 192.168.115.44
num_healthy_workers: 2
off_policy_estimator: {}
optimizer_steps_this_iter: 1
perf:
  cpu_util_percent: 37.05298507462687
  gpu_util_percent0: 0.0
  ram_util_percent: 18.812313432835822
  vram_util_percent0: 0.018997524752475244
pid: 14319
policy_reward_max:
  agent_policy: 88.168883184391
  planner_policy: 101.66491195352357
policy_reward_mean:
  agent_policy: 45.65119961667261
  planner_policy: 76.58292013690348
policy_reward_min:
  agent_policy: 14.931333412591778
  planner_policy: 55.11141350764647
sampler_perf:
  mean_env_wait_ms: 2.0362235119312078
  mean_inference_ms: 2.4960760639625357
  mean_processing_ms: 0.6236545277052835
time_since_restore: 200.88974046707153
time_this_iter_s: 200.88974046707153
time_total_s: 200.88974046707153
timestamp: 1664959245
timesteps_since_restore: 4000
timesteps_this_iter: 4000
timesteps_total: 4000
training_iteration: 1

2022-10-05 10:40:45,776 >> Wrote dense logs to: /home/ettore.saggiorato/ai-economist-ppo-decision-tree/ai-economist/tutorials/rllib/experiments/check/phase1_gpu/dense_logs/logs_0000000000004000
-- PPO Agents -- Steps done: 3
2022-10-05 10:43:27,944 Iter 2: steps this-iter 4000 total 8000 -> 7/5000 episodes done
2022-10-05 10:43:27,950 custom_metrics: {}
date: 2022-10-05_10-43-27
done: false
episode_len_mean: 1000.0
episode_reward_max: 448.96236074072687
episode_reward_mean: 288.6381788973957
episode_reward_min: 196.61612633726165
episodes_this_iter: 4
episodes_total: 7
experiment_id: d7b36f961143499f822fc66426c5a7be
hostname: hpc-g04-node02.unitn.it
info:
  grad_time_ms: 151728.237
  learner:
    agent_policy:
      cur_kl_coeff: 0.0
      cur_lr: 0.0003000000142492354
      entropy: 1.917548656463623
      entropy_coeff: 0.02500000037252903
      kl: 0.1330968588590622
      model: {}
      policy_loss: -0.1880803108215332
      total_loss: -0.19319555163383484
      vf_explained_var: 0.9325658679008484
      vf_loss: 0.8564692735671997
  load_time_ms: 1478.072
  num_steps_sampled: 8000
  num_steps_trained: 32000
  sample_time_ms: 24573.747
  update_time_ms: 3512.974
iterations_since_restore: 2
node_ip: 192.168.115.44
num_healthy_workers: 2
off_policy_estimator: {}
optimizer_steps_this_iter: 1
perf:
  cpu_util_percent: 36.86649746192893
  gpu_util_percent0: 0.0
  ram_util_percent: 18.8
  vram_util_percent0: 0.018997524752475244
pid: 14319
policy_reward_max:
  agent_policy: 88.168883184391
  planner_policy: 176.8573945857062
policy_reward_mean:
  agent_policy: 48.699814869655576
  planner_policy: 93.83891941877333
policy_reward_min:
  agent_policy: 14.931333412591778
  planner_policy: 55.11141350764647
sampler_perf:
  mean_env_wait_ms: 2.0110749656137097
  mean_inference_ms: 2.471804739877186
  mean_processing_ms: 0.627323160822159
time_since_restore: 363.037939786911
time_this_iter_s: 162.14819931983948
time_total_s: 363.037939786911
timestamp: 1664959407
timesteps_since_restore: 8000
timesteps_this_iter: 4000
timesteps_total: 8000
training_iteration: 2

2022-10-05 10:43:28,148 >> Wrote dense logs to: /home/ettore.saggiorato/ai-economist-ppo-decision-tree/ai-economist/tutorials/rllib/experiments/check/phase1_gpu/dense_logs/logs_0000000000008000
-- PPO Agents -- Steps done: 7
=>> PBS: job killed: walltime 602 exceeded limit 600
*** Aborted at 1664959514 (unix time) try "date -d @1664959514" if you are using GNU date ***
PC: @                0x0 (unknown)
*** SIGTERM (@0xfe7c) received by PID 14319 (TID 0x2b6c9d56d3c0) from PID 65148; stack trace: ***
    @     0x2b6c9d766630 (unknown)
    @     0x2b6c9e174bf9 syscall
    @     0x2b6ce61be479 nsync::nsync_mu_semaphore_p_with_deadline()
    @     0x2b6ce61bdab9 nsync::nsync_sem_wait_with_cancel_()
2022-10-05 10:45:14,538	ERROR import_thread.py:93 -- ImportThread: Connection closed by server.
2022-10-05 10:45:14,546	ERROR worker.py:1092 -- listen_error_messages_raylet: Connection closed by server.
    @     0x2b6ce61bb0e3 nsync::nsync_cv_wait_with_deadline_generic()
    @     0x2b6ce61bb5e3 nsync::nsync_cv_wait_with_deadline()
    @     0x2b6ce523540b tensorflow::DirectSession::RunInternal()
    @     0x2b6ce5236829 tensorflow::DirectSession::Run()
    @     0x2b6ce521f134 tensorflow::DirectSession::Run()
    @     0x2b6cd553a8c2 tensorflow::SessionRef::Run()
    @     0x2b6cd5995f5e TF_Run_Helper()
    @     0x2b6cd5996c28 TF_SessionRun
    @     0x2b6cd553401f tensorflow::TF_SessionRun_wrapper_helper()
    @     0x2b6cd55340c2 tensorflow::TF_SessionRun_wrapper()
    @     0x2b6d090b0274 _ZZN8pybind1112cpp_function10initializeIZL32pybind11_init__pywrap_tf_sessionRNS_7module_EEUlP10TF_SessionP9TF_BufferRKNS_6handleERKSt6vectorI9TF_OutputSaISC_EERKSB_IP12TF_OperationSaISI_EES7_E15_NS_6objectEJS5_S7_SA_SG_SM_S7_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFT0_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE1_4_FUNES15_
    @     0x2b6d09099c98 pybind11::cpp_function::dispatcher()
    @           0x46299c _PyCFunction_FastCallKeywords
    @           0x4fc23a _PyEval_EvalFrameDefault
    @           0x46217a function_code_fastcall
    @           0x4f79ff _PyEval_EvalFrameDefault
    @           0x501a88 _PyEval_EvalCodeWithName
    @           0x468f5f PyObject_Call
    @           0x4f91a4 _PyEval_EvalFrameDefault
    @           0x501a88 _PyEval_EvalCodeWithName
    @           0x4625aa _PyFunction_FastCallKeywords
    @           0x4f79ff _PyEval_EvalFrameDefault
    @           0x501ed8 _PyEval_EvalCodeWithName
    @           0x4625aa _PyFunction_FastCallKeywords
    @           0x4f79ff _PyEval_EvalFrameDefault
    @           0x46217a function_code_fastcall
    @           0x4f79ff _PyEval_EvalFrameDefault
    @           0x501a88 _PyEval_EvalCodeWithName
