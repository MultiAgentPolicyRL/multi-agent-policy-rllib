Allocate Nodes = <hpc-c05-node03 hpc-c03-node12 hpc-c11-node08>
set up ray cluster...


Working with node hpc-c05-node03
first allocate node - use as headnode ...
2022-10-04 18:34:24,502	INFO scripts.py:357 -- Using IP address 192.168.115.60 for this node.
2022-10-04 18:34:24,507	INFO resource_spec.py:212 -- Starting Ray with 548.34 GiB memory available for workers and up to 186.26 GiB for objects. You can adjust these settings with ray.init(memory=<bytes>, object_store_memory=<bytes>).
2022-10-04 18:34:25,758	INFO services.py:1170 -- View the Ray dashboard at [1m[32mlocalhost:8265[39m[22m
2022-10-04 18:34:25,802	INFO scripts.py:387 -- 
Started Ray on this node. You can add additional nodes to the cluster by calling

    ray start --address='192.168.115.60:6379' --redis-password='e25ea5fc-7b3a-494f-82f1-3f3a7530c70f'

from the node you wish to add. You can connect a driver to the cluster from Python by running

    import ray
    ray.init(address='auto', redis_password='e25ea5fc-7b3a-494f-82f1-3f3a7530c70f')

If you have trouble connecting from a different machine, check that your firewall is configured properly. If you wish to terminate the processes that have been started, run

    ray stop

Working with node hpc-c03-node12
then allocate other nodes:  1
node NAME: hpc-c05-node03.unitn.it
node IP: 192.168.115.60
dest IP: 192.168.115.60:6379

Working with node hpc-c11-node08
then allocate other nodes:  2
node NAME: hpc-c03-node12.unitn.it
node IP: 192.168.115.105
dest IP: 192.168.115.60:6379
2022-10-04 18:34:46,530	INFO scripts.py:429 -- Using IP address 192.168.115.105 for this node.
2022-10-04 18:34:46,534	INFO resource_spec.py:212 -- Starting Ray with 235.84 GiB memory available for workers and up to 101.09 GiB for objects. You can adjust these settings with ray.init(memory=<bytes>, object_store_memory=<bytes>).
2022-10-04 18:34:46,576	INFO scripts.py:438 -- 
Started Ray on this node. If you wish to terminate the processes that have been started, run

    ray stop
exiting hpc-c03-node12.unitn.it

done, now launching python program
2022-10-04 18:36:10,469	INFO scripts.py:429 -- Using IP address 192.168.115.60 for this node.
2022-10-04 18:36:10,471	INFO resource_spec.py:212 -- Starting Ray with 555.18 GiB memory available for workers and up to 186.26 GiB for objects. You can adjust these settings with ray.init(memory=<bytes>, object_store_memory=<bytes>).
2022-10-04 18:36:10,506	INFO scripts.py:438 -- 
Started Ray on this node. If you wish to terminate the processes that have been started, run

    ray stop
exiting hpc-c05-node03.unitn.it
Inside covid19_components.py: 0 GPUs are available.
No GPUs found! Running the simulation on a CPU.
Inside covid19_env.py: 0 GPUs are available.
No GPUs found! Running the simulation on a CPU.
2022-10-04 18:36:46,287	WARNING worker.py:809 -- When connecting to an existing cluster, _internal_config must match the cluster's _internal_config.
2022-10-04 18:36:46,313 seed (final): 24862000
2022-10-04 18:36:46,379	INFO trainer.py:421 -- Tip: set 'eager': true or the --eager flag to enable TensorFlow eager execution
2022-10-04 18:36:46,733	INFO trainer.py:580 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
2022-10-04 18:37:06,783	INFO trainable.py:180 -- _setup took 20.051 seconds. If your trainable is slow to initialize, consider setting reuse_actors=True to reduce actor creation overheads.
2022-10-04 18:37:06,783	INFO trainable.py:217 -- Getting current IP.
2022-10-04 18:37:19,511	INFO trainable.py:180 -- _setup took 12.641 seconds. If your trainable is slow to initialize, consider setting reuse_actors=True to reduce actor creation overheads.
2022-10-04 18:37:19,512	INFO trainable.py:217 -- Getting current IP.
2022-10-04 18:37:19,533 Not restoring trainer...
2022-10-04 18:37:19,534 Starting with fresh agent TF weights.
2022-10-04 18:37:19,534 Starting with fresh planner TF weights.
Training
-- PPO Agents -- Steps done: 0
2022-10-04 18:40:50,515 Iter 1: steps this-iter 4000 total 4000 -> 4/5000 episodes done
2022-10-04 18:40:50,521 custom_metrics: {}
date: 2022-10-04_18-40-50
done: false
episode_len_mean: 1000.0
episode_reward_max: 68.81957970937087
episode_reward_mean: 24.672570698896195
episode_reward_min: -5.471415848078857
episodes_this_iter: 4
episodes_total: 4
experiment_id: dd7b972bff70445680880a7b6e63fe40
hostname: hpc-c05-node03.unitn.it
info:
  grad_time_ms: 136663.83
  learner:
    agent_policy:
      cur_kl_coeff: 0.0
      cur_lr: 0.0003000000142492354
      entropy: 1.648790717124939
      entropy_coeff: 0.02500000037252903
      kl: 0.08273422718048096
      model: {}
      policy_loss: -0.11225038021802902
      total_loss: -0.14310038089752197
      vf_explained_var: 0.731458306312561
      vf_loss: 0.20739537477493286
  load_time_ms: 905.398
  num_steps_sampled: 4000
  num_steps_trained: 16000
  sample_time_ms: 65791.414
  update_time_ms: 6451.114
iterations_since_restore: 1
node_ip: 192.168.115.60
num_healthy_workers: 2
off_policy_estimator: {}
optimizer_steps_this_iter: 1
perf:
  cpu_util_percent: 53.8639072847682
  ram_util_percent: 2.4006622516556293
pid: 57131
policy_reward_max:
  agent_policy: 20.076107298257746
  planner_policy: 14.943623077461785
policy_reward_mean:
  agent_policy: 4.8452949758869135
  planner_policy: 5.291390795348709
policy_reward_min:
  agent_policy: -1.4209273846046817
  planner_policy: 0.0
sampler_perf:
  mean_env_wait_ms: 2.1462306447293624
  mean_inference_ms: 2.724337315690452
  mean_processing_ms: 0.642623143575002
time_since_restore: 210.09768986701965
time_this_iter_s: 210.09768986701965
time_total_s: 210.09768986701965
timestamp: 1664901650
timesteps_since_restore: 4000
timesteps_this_iter: 4000
timesteps_total: 4000
training_iteration: 1

2022-10-04 18:40:50,679 >> Wrote dense logs to: /home/ettore.saggiorato/ai-economist-ppo-decision-tree/ai-economist/tutorials/rllib/experiments/check/phase1_gpu/dense_logs/logs_0000000000004000
-- PPO Agents -- Steps done: 4
2022-10-04 18:43:15,746 Iter 2: steps this-iter 4000 total 8000 -> 8/5000 episodes done
2022-10-04 18:43:15,751 custom_metrics: {}
date: 2022-10-04_18-43-15
done: false
episode_len_mean: 1000.0
episode_reward_max: 160.3633056277263
episode_reward_mean: 53.89503303719611
episode_reward_min: -5.471415848078857
episodes_this_iter: 4
episodes_total: 8
experiment_id: dd7b972bff70445680880a7b6e63fe40
hostname: hpc-c05-node03.unitn.it
info:
  grad_time_ms: 135061.625
  learner:
    agent_policy:
      cur_kl_coeff: 0.0
      cur_lr: 0.0003000000142492354
      entropy: 1.7393243312835693
      entropy_coeff: 0.02500000037252903
      kl: 0.11271324753761292
      model: {}
      policy_loss: -0.14762413501739502
      total_loss: -0.17162621021270752
      vf_explained_var: 0.898586094379425
      vf_loss: 0.3896203637123108
  load_time_ms: 700.517
  num_steps_sampled: 8000
  num_steps_trained: 32000
  sample_time_ms: 38426.534
  update_time_ms: 3229.416
iterations_since_restore: 2
node_ip: 192.168.115.60
num_healthy_workers: 2
off_policy_estimator: {}
optimizer_steps_this_iter: 1
perf:
  cpu_util_percent: 56.57783505154639
  ram_util_percent: 2.4922680412371134
pid: 57131
policy_reward_max:
  agent_policy: 63.88530782490264
  planner_policy: 34.11742944609225
policy_reward_mean:
  agent_policy: 10.362056013376076
  planner_policy: 12.446808983691962
policy_reward_min:
  agent_policy: -1.4209273846046817
  planner_policy: 0.0
sampler_perf:
  mean_env_wait_ms: 2.1101731699909783
  mean_inference_ms: 2.672353594730969
  mean_processing_ms: 0.6420847310443787
time_since_restore: 355.1397807598114
time_this_iter_s: 145.04209089279175
time_total_s: 355.1397807598114
timestamp: 1664901795
timesteps_since_restore: 8000
timesteps_this_iter: 4000
timesteps_total: 8000
training_iteration: 2

-- PPO Agents -- Steps done: 8
=>> PBS: job killed: walltime 604 exceeded limit 600
*** Aborted at 1664901865 (unix time) try "date -d @1664901865" if you are using GNU date ***
PC: @                0x0 (unknown)
*** SIGTERM (@0x6bfd) received by PID 57131 (TID 0x2af9f0bff3c0) from PID 27645; stack trace: ***
    @     0x2af9f0dfd5d0 (unknown)
2022-10-04 18:44:25,390	ERROR import_thread.py:93 -- ImportThread: Connection closed by server.
2022-10-04 18:44:25,396	ERROR worker.py:1092 -- listen_error_messages_raylet: Connection closed by server.
    @     0x2afa5af10a06 tensorflow::PropagatorState::PropagatorState()
    @     0x2afa5aef7688 tensorflow::(anonymous namespace)::ExecutorImpl::RunAsync()
    @     0x2afa388aa1e6 tensorflow::DirectSession::RunInternal()
    @     0x2afa388ad829 tensorflow::DirectSession::Run()
    @     0x2afa38896134 tensorflow::DirectSession::Run()
    @     0x2afa28bb18c2 tensorflow::SessionRef::Run()
    @     0x2afa2900cf5e TF_Run_Helper()
    @     0x2afa2900dc28 TF_SessionRun
    @     0x2afa28bab01f tensorflow::TF_SessionRun_wrapper_helper()
    @     0x2afa28bab0c2 tensorflow::TF_SessionRun_wrapper()
    @     0x2afa5c48e274 _ZZN8pybind1112cpp_function10initializeIZL32pybind11_init__pywrap_tf_sessionRNS_7module_EEUlP10TF_SessionP9TF_BufferRKNS_6handleERKSt6vectorI9TF_OutputSaISC_EERKSB_IP12TF_OperationSaISI_EES7_E15_NS_6objectEJS5_S7_SA_SG_SM_S7_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFT0_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE1_4_FUNES15_
    @     0x2afa5c477c98 pybind11::cpp_function::dispatcher()
    @           0x46299c _PyCFunction_FastCallKeywords
    @           0x4fc23a _PyEval_EvalFrameDefault
    @           0x46217a function_code_fastcall
    @           0x4f79ff _PyEval_EvalFrameDefault
    @           0x501a88 _PyEval_EvalCodeWithName
    @           0x468f5f PyObject_Call
    @           0x4f91a4 _PyEval_EvalFrameDefault
    @           0x501a88 _PyEval_EvalCodeWithName
    @           0x4625aa _PyFunction_FastCallKeywords
    @           0x4f79ff _PyEval_EvalFrameDefault
    @           0x501ed8 _PyEval_EvalCodeWithName
    @           0x4625aa _PyFunction_FastCallKeywords
    @           0x4f79ff _PyEval_EvalFrameDefault
    @           0x46217a function_code_fastcall
    @           0x4f79ff _PyEval_EvalFrameDefault
    @           0x501a88 _PyEval_EvalCodeWithName
    @           0x4625aa _PyFunction_FastCallKeywords
    @           0x4f87a0 _PyEval_EvalFrameDefault
    @           0x46217a function_code_fastcall
