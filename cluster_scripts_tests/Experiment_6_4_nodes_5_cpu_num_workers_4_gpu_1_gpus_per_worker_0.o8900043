Allocate Nodes = <hpc-g04-node02 hpc-g04-node01 hpc-g01-node01 hpc-g01-node02>
set up ray cluster...


Working with node hpc-g04-node02
first allocate node - use as headnode ...
2022-10-05 12:02:42,769	INFO scripts.py:357 -- Using IP address 192.168.115.44 for this node.
2022-10-05 12:02:42,772	INFO resource_spec.py:212 -- Starting Ray with 427.05 GiB memory available for workers and up to 186.26 GiB for objects. You can adjust these settings with ray.init(memory=<bytes>, object_store_memory=<bytes>).
2022-10-05 12:02:43,715	INFO services.py:1170 -- View the Ray dashboard at [1m[32mlocalhost:8265[39m[22m
2022-10-05 12:02:43,759	INFO scripts.py:387 -- 
Started Ray on this node. You can add additional nodes to the cluster by calling

    ray start --address='192.168.115.44:3679' --redis-password='4f28757c-d5d7-460d-9245-16c7f3141461'

from the node you wish to add. You can connect a driver to the cluster from Python by running

    import ray
    ray.init(address='auto', redis_password='4f28757c-d5d7-460d-9245-16c7f3141461')

If you have trouble connecting from a different machine, check that your firewall is configured properly. If you wish to terminate the processes that have been started, run

    ray stop

Working with node hpc-g04-node01
then allocate other nodes:  1
node NAME: hpc-g04-node01.unitn.it
node IP: 192.168.115.24
dest IP: 192.168.115.44:3679
2022-10-05 12:02:51,604	INFO scripts.py:429 -- Using IP address 192.168.115.24 for this node.
2022-10-05 12:02:51,634	INFO resource_spec.py:212 -- Starting Ray with 529.44 GiB memory available for workers and up to 186.26 GiB for objects. You can adjust these settings with ray.init(memory=<bytes>, object_store_memory=<bytes>).
2022-10-05 12:02:51,658	INFO scripts.py:438 -- 
Started Ray on this node. If you wish to terminate the processes that have been started, run

    ray stop
exiting hpc-g04-node01.unitn.it

Working with node hpc-g01-node01
then allocate other nodes:  2
node NAME: hpc-g01-node01.unitn.it
node IP: 192.168.115.75
dest IP: 192.168.115.44:3679

Working with node hpc-g01-node02
then allocate other nodes:  3
node NAME: hpc-g01-node02.unitn.it
node IP: 192.168.115.93
dest IP: 192.168.115.44:3679
2022-10-05 12:03:11,761	INFO scripts.py:429 -- Using IP address 192.168.115.93 for this node.
2022-10-05 12:03:11,764	INFO resource_spec.py:212 -- Starting Ray with 173.29 GiB memory available for workers and up to 74.28 GiB for objects. You can adjust these settings with ray.init(memory=<bytes>, object_store_memory=<bytes>).
2022-10-05 12:03:11,764	WARNING services.py:1494 -- WARNING: The object store is using /tmp instead of /dev/shm because /dev/shm has only 55419244544 bytes available. This may slow down performance! You may be able to free up space by deleting files in /dev/shm or terminating any running plasma_store_server processes. If you are inside a Docker container, you may need to pass an argument with the flag '--shm-size' to 'docker run'.
2022-10-05 12:03:11,782	INFO scripts.py:438 -- 
Started Ray on this node. If you wish to terminate the processes that have been started, run

    ray stop
exiting hpc-g01-node02.unitn.it

done, now launching python program
2022-10-05 12:03:41,231	INFO scripts.py:429 -- Using IP address 192.168.115.75 for this node.
2022-10-05 12:03:41,234	INFO resource_spec.py:212 -- Starting Ray with 174.07 GiB memory available for workers and up to 74.61 GiB for objects. You can adjust these settings with ray.init(memory=<bytes>, object_store_memory=<bytes>).
2022-10-05 12:03:41,262	INFO scripts.py:438 -- 
Started Ray on this node. If you wish to terminate the processes that have been started, run

    ray stop
exiting hpc-g01-node01.unitn.it
Inside covid19_components.py: 1 GPUs are available.
Warning: The 'WarpDrive' package is not found and cannot be used! If you wish to use WarpDrive, please run 'pip install rl-warp-drive' first.
Inside covid19_env.py: 1 GPUs are available.
Warning: The 'WarpDrive' package is not found and cannot be used! If you wish to use WarpDrive, please run 'pip install rl-warp-drive' first.
2022-10-05 12:04:31,956	WARNING worker.py:809 -- When connecting to an existing cluster, _internal_config must match the cluster's _internal_config.
2022-10-05 12:04:31,983 seed (final): 22191000
2022-10-05 12:04:32,045	INFO trainer.py:421 -- Tip: set 'eager': true or the --eager flag to enable TensorFlow eager execution
2022-10-05 12:04:32,334	INFO trainer.py:580 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
2022-10-05 12:04:56,431	INFO trainable.py:180 -- _setup took 24.099 seconds. If your trainable is slow to initialize, consider setting reuse_actors=True to reduce actor creation overheads.
2022-10-05 12:04:56,432	INFO trainable.py:217 -- Getting current IP.
2022-10-05 12:05:11,600	INFO trainable.py:180 -- _setup took 15.055 seconds. If your trainable is slow to initialize, consider setting reuse_actors=True to reduce actor creation overheads.
2022-10-05 12:05:11,600	INFO trainable.py:217 -- Getting current IP.
2022-10-05 12:05:11,631 Not restoring trainer...
2022-10-05 12:05:11,632 Starting with fresh agent TF weights.
2022-10-05 12:05:11,632 Starting with fresh planner TF weights.
Training
-- PPO Agents -- Steps done: 0
2022-10-05 12:08:55,972 Iter 1: steps this-iter 4000 total 4000 -> 3/5000 episodes done
2022-10-05 12:08:55,978 custom_metrics: {}
date: 2022-10-05_12-08-55
done: false
episode_len_mean: 1000.0
episode_reward_max: 140.2729644931571
episode_reward_mean: 131.6136991547523
episode_reward_min: 123.48701822396677
episodes_this_iter: 3
episodes_total: 3
experiment_id: 88cb35ac40644f7ea7691032f73ad4fa
hostname: hpc-g04-node02.unitn.it
info:
  grad_time_ms: 149798.769
  learner:
    agent_policy:
      cur_kl_coeff: 0.0
      cur_lr: 0.0003000000142492354
      entropy: 1.7905277013778687
      entropy_coeff: 0.02500000037252903
      kl: 0.10558003932237625
      model: {}
      policy_loss: -0.1558583825826645
      total_loss: -0.16062501072883606
      vf_explained_var: 0.8549821376800537
      vf_loss: 0.7999309301376343
  load_time_ms: 1788.09
  num_steps_sampled: 4000
  num_steps_trained: 16000
  sample_time_ms: 63660.754
  update_time_ms: 7411.48
iterations_since_restore: 1
node_ip: 192.168.115.44
num_healthy_workers: 2
off_policy_estimator: {}
optimizer_steps_this_iter: 1
perf:
  cpu_util_percent: 37.55993377483444
  gpu_util_percent0: 0.0
  ram_util_percent: 18.627814569536422
  vram_util_percent0: 0.018997524752475244
pid: 40745
policy_reward_max:
  agent_policy: 51.23875853527746
  planner_policy: 40.04263317043364
policy_reward_mean:
  agent_policy: 24.643364533715513
  planner_policy: 33.04024101989123
policy_reward_min:
  agent_policy: 7.972840041677639
  planner_policy: 24.888606770599992
sampler_perf:
  mean_env_wait_ms: 2.002489665780145
  mean_inference_ms: 2.5258894122844953
  mean_processing_ms: 0.6037560280948191
time_since_restore: 223.27079963684082
time_this_iter_s: 223.27079963684082
time_total_s: 223.27079963684082
timestamp: 1664964535
timesteps_since_restore: 4000
timesteps_this_iter: 4000
timesteps_total: 4000
training_iteration: 1

2022-10-05 12:08:56,152 >> Wrote dense logs to: /home/ettore.saggiorato/ai-economist-ppo-decision-tree/ai-economist/tutorials/rllib/experiments/check/phase1_gpu/dense_logs/logs_0000000000004000
-- PPO Agents -- Steps done: 3
2022-10-05 12:11:33,975 Iter 2: steps this-iter 4000 total 8000 -> 7/5000 episodes done
2022-10-05 12:11:33,983 custom_metrics: {}
date: 2022-10-05_12-11-33
done: false
episode_len_mean: 1000.0
episode_reward_max: 167.3083039830711
episode_reward_mean: 123.36240909762799
episode_reward_min: 92.27170162750006
episodes_this_iter: 4
episodes_total: 7
experiment_id: 88cb35ac40644f7ea7691032f73ad4fa
hostname: hpc-g04-node02.unitn.it
info:
  grad_time_ms: 147396.257
  learner:
    agent_policy:
      cur_kl_coeff: 0.0
      cur_lr: 0.0003000000142492354
      entropy: 1.7822688817977905
      entropy_coeff: 0.02500000037252903
      kl: 0.13333095610141754
      model: {}
      policy_loss: -0.18179871141910553
      total_loss: -0.20604118704795837
      vf_explained_var: 0.9319495558738708
      vf_loss: 0.4062846899032593
  load_time_ms: 1555.958
  num_steps_sampled: 8000
  num_steps_trained: 32000
  sample_time_ms: 37491.658
  update_time_ms: 3710.186
iterations_since_restore: 2
node_ip: 192.168.115.44
num_healthy_workers: 2
off_policy_estimator: {}
optimizer_steps_this_iter: 1
perf:
  cpu_util_percent: 62.12291666666666
  gpu_util_percent0: 0.0
  ram_util_percent: 22.508333333333336
  vram_util_percent0: 0.018997524752475244
pid: 40745
policy_reward_max:
  agent_policy: 55.00533750451852
  planner_policy: 46.58642605362794
policy_reward_mean:
  agent_policy: 23.30629560504089
  planner_policy: 30.137226677464476
policy_reward_min:
  agent_policy: -5.642271991648225
  planner_policy: 16.28692905744183
sampler_perf:
  mean_env_wait_ms: 2.048803508245234
  mean_inference_ms: 2.544570081727241
  mean_processing_ms: 0.6313753396649407
time_since_restore: 381.0006732940674
time_this_iter_s: 157.72987365722656
time_total_s: 381.0006732940674
timestamp: 1664964693
timesteps_since_restore: 8000
timesteps_this_iter: 4000
timesteps_total: 8000
training_iteration: 2

2022-10-05 12:11:34,159 >> Wrote dense logs to: /home/ettore.saggiorato/ai-economist-ppo-decision-tree/ai-economist/tutorials/rllib/experiments/check/phase1_gpu/dense_logs/logs_0000000000008000
-- PPO Agents -- Steps done: 7
=>> PBS: job killed: walltime 601 exceeded limit 600
*** Aborted at 1664964761 (unix time) try "date -d @1664964761" if you are using GNU date ***
PC: @                0x0 (unknown)
*** SIGTERM (@0xfe7c) received by PID 40745 (TID 0x2ae1211b83c0) from PID 65148; stack trace: ***
    @     0x2ae1213b1630 (unknown)
    @     0x2ae121dbfbf9 syscall
    @     0x2ae1549ff479 nsync::nsync_mu_semaphore_p_with_deadline()
    @     0x2ae1549feab9 nsync::nsync_sem_wait_with_cancel_()
2022-10-05 12:12:41,863	ERROR import_thread.py:93 -- ImportThread: Connection closed by server.
2022-10-05 12:12:41,865	ERROR worker.py:1092 -- listen_error_messages_raylet: Connection closed by server.
    @     0x2ae1549fc0e3 nsync::nsync_cv_wait_with_deadline_generic()
    @     0x2ae1549fc5e3 nsync::nsync_cv_wait_with_deadline()
    @     0x2ae153a7640b tensorflow::DirectSession::RunInternal()
    @     0x2ae153a77829 tensorflow::DirectSession::Run()
    @     0x2ae153a60134 tensorflow::DirectSession::Run()
    @     0x2ae143d7b8c2 tensorflow::SessionRef::Run()
    @     0x2ae1441d6f5e TF_Run_Helper()
    @     0x2ae1441d7c28 TF_SessionRun
    @     0x2ae143d7501f tensorflow::TF_SessionRun_wrapper_helper()
    @     0x2ae143d750c2 tensorflow::TF_SessionRun_wrapper()
    @     0x2ae1778f1274 _ZZN8pybind1112cpp_function10initializeIZL32pybind11_init__pywrap_tf_sessionRNS_7module_EEUlP10TF_SessionP9TF_BufferRKNS_6handleERKSt6vectorI9TF_OutputSaISC_EERKSB_IP12TF_OperationSaISI_EES7_E15_NS_6objectEJS5_S7_SA_SG_SM_S7_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFT0_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE1_4_FUNES15_
    @     0x2ae1778dac98 pybind11::cpp_function::dispatcher()
    @           0x46299c _PyCFunction_FastCallKeywords
    @           0x4fc23a _PyEval_EvalFrameDefault
    @           0x46217a function_code_fastcall
    @           0x4f79ff _PyEval_EvalFrameDefault
    @           0x501a88 _PyEval_EvalCodeWithName
    @           0x468f5f PyObject_Call
    @           0x4f91a4 _PyEval_EvalFrameDefault
    @           0x501a88 _PyEval_EvalCodeWithName
    @           0x4625aa _PyFunction_FastCallKeywords
    @           0x4f79ff _PyEval_EvalFrameDefault
    @           0x501ed8 _PyEval_EvalCodeWithName
    @           0x4625aa _PyFunction_FastCallKeywords
    @           0x4f79ff _PyEval_EvalFrameDefault
    @           0x46217a function_code_fastcall
    @           0x4f79ff _PyEval_EvalFrameDefault
    @           0x501a88 _PyEval_EvalCodeWithName
