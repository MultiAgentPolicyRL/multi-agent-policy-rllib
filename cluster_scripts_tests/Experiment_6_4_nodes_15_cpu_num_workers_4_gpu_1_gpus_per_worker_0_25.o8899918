Allocate Nodes = <hpc-g04-node02 hpc-g04-node01 hpc-g01-node02 hpc-g02-node02>
set up ray cluster...


Working with node hpc-g04-node02
first allocate node - use as headnode ...
2022-10-05 10:45:33,921	INFO scripts.py:357 -- Using IP address 192.168.115.44 for this node.
2022-10-05 10:45:33,924	INFO resource_spec.py:212 -- Starting Ray with 426.76 GiB memory available for workers and up to 186.26 GiB for objects. You can adjust these settings with ray.init(memory=<bytes>, object_store_memory=<bytes>).
2022-10-05 10:45:34,794	INFO services.py:1170 -- View the Ray dashboard at [1m[32mlocalhost:8265[39m[22m
2022-10-05 10:45:34,829	INFO scripts.py:387 -- 
Started Ray on this node. You can add additional nodes to the cluster by calling

    ray start --address='192.168.115.44:3680' --redis-password='bd436a7a-03e8-40f5-925e-e6026e3fd443'

from the node you wish to add. You can connect a driver to the cluster from Python by running

    import ray
    ray.init(address='auto', redis_password='bd436a7a-03e8-40f5-925e-e6026e3fd443')

If you have trouble connecting from a different machine, check that your firewall is configured properly. If you wish to terminate the processes that have been started, run

    ray stop

Working with node hpc-g04-node01
then allocate other nodes:  1
node NAME: hpc-g04-node01.unitn.it
node IP: 192.168.115.24
dest IP: 192.168.115.44:3680
2022-10-05 10:45:42,498	INFO scripts.py:429 -- Using IP address 192.168.115.24 for this node.
2022-10-05 10:45:42,501	INFO resource_spec.py:212 -- Starting Ray with 529.44 GiB memory available for workers and up to 186.26 GiB for objects. You can adjust these settings with ray.init(memory=<bytes>, object_store_memory=<bytes>).
2022-10-05 10:45:42,523	INFO scripts.py:438 -- 
Started Ray on this node. If you wish to terminate the processes that have been started, run

    ray stop
exiting hpc-g04-node01.unitn.it

Working with node hpc-g01-node02
then allocate other nodes:  2
node NAME: hpc-g01-node02.unitn.it
node IP: 192.168.115.93
dest IP: 192.168.115.44:3680
2022-10-05 10:45:52,764	INFO scripts.py:429 -- Using IP address 192.168.115.93 for this node.
2022-10-05 10:45:52,767	INFO resource_spec.py:212 -- Starting Ray with 173.29 GiB memory available for workers and up to 74.28 GiB for objects. You can adjust these settings with ray.init(memory=<bytes>, object_store_memory=<bytes>).
2022-10-05 10:45:52,767	WARNING services.py:1494 -- WARNING: The object store is using /tmp instead of /dev/shm because /dev/shm has only 55419244544 bytes available. This may slow down performance! You may be able to free up space by deleting files in /dev/shm or terminating any running plasma_store_server processes. If you are inside a Docker container, you may need to pass an argument with the flag '--shm-size' to 'docker run'.
2022-10-05 10:45:52,786	INFO scripts.py:438 -- 
Started Ray on this node. If you wish to terminate the processes that have been started, run

    ray stop
exiting hpc-g01-node02.unitn.it

Working with node hpc-g02-node02
then allocate other nodes:  3
node NAME: hpc-g02-node02.unitn.it
node IP: 192.168.115.10
dest IP: 192.168.115.44:3680
2022-10-05 10:46:02,560	INFO scripts.py:429 -- Using IP address 192.168.115.10 for this node.
2022-10-05 10:46:02,581	INFO resource_spec.py:212 -- Starting Ray with 218.46 GiB memory available for workers and up to 93.64 GiB for objects. You can adjust these settings with ray.init(memory=<bytes>, object_store_memory=<bytes>).
2022-10-05 10:46:02,582	WARNING services.py:1494 -- WARNING: The object store is using /tmp instead of /dev/shm because /dev/shm has only 68429537280 bytes available. This may slow down performance! You may be able to free up space by deleting files in /dev/shm or terminating any running plasma_store_server processes. If you are inside a Docker container, you may need to pass an argument with the flag '--shm-size' to 'docker run'.
2022-10-05 10:46:02,607	INFO scripts.py:438 -- 
Started Ray on this node. If you wish to terminate the processes that have been started, run

    ray stop
exiting hpc-g02-node02.unitn.it

done, now launching python program
Inside covid19_components.py: 1 GPUs are available.
Warning: The 'WarpDrive' package is not found and cannot be used! If you wish to use WarpDrive, please run 'pip install rl-warp-drive' first.
Inside covid19_env.py: 1 GPUs are available.
Warning: The 'WarpDrive' package is not found and cannot be used! If you wish to use WarpDrive, please run 'pip install rl-warp-drive' first.
2022-10-05 10:47:07,166	WARNING worker.py:809 -- When connecting to an existing cluster, _internal_config must match the cluster's _internal_config.
2022-10-05 10:47:07,195 seed (final): 17547000
2022-10-05 10:47:07,256	INFO trainer.py:421 -- Tip: set 'eager': true or the --eager flag to enable TensorFlow eager execution
2022-10-05 10:47:07,491	INFO trainer.py:580 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
2022-10-05 10:47:31,568	INFO trainable.py:180 -- _setup took 24.079 seconds. If your trainable is slow to initialize, consider setting reuse_actors=True to reduce actor creation overheads.
2022-10-05 10:47:31,568	INFO trainable.py:217 -- Getting current IP.
2022-10-05 10:47:45,262	INFO trainable.py:180 -- _setup took 13.602 seconds. If your trainable is slow to initialize, consider setting reuse_actors=True to reduce actor creation overheads.
2022-10-05 10:47:45,262	INFO trainable.py:217 -- Getting current IP.
2022-10-05 10:47:45,294 Not restoring trainer...
2022-10-05 10:47:45,295 Starting with fresh agent TF weights.
2022-10-05 10:47:45,295 Starting with fresh planner TF weights.
Training
-- PPO Agents -- Steps done: 0
2022-10-05 10:51:18,864 Iter 1: steps this-iter 4000 total 4000 -> 3/5000 episodes done
2022-10-05 10:51:18,869 custom_metrics: {}
date: 2022-10-05_10-51-18
done: false
episode_len_mean: 1000.0
episode_reward_max: 178.69598979528445
episode_reward_mean: 169.5224154868041
episode_reward_min: 152.40912034622505
episodes_this_iter: 3
episodes_total: 3
experiment_id: 62f9b81a640b4b6a88f06f7b0eae0c2b
hostname: hpc-g04-node02.unitn.it
info:
  grad_time_ms: 152056.242
  learner:
    agent_policy:
      cur_kl_coeff: 0.0
      cur_lr: 0.0003000000142492354
      entropy: 1.9343026876449585
      entropy_coeff: 0.02500000037252903
      kl: 0.11464515328407288
      model: {}
      policy_loss: -0.1649707555770874
      total_loss: -0.16691531240940094
      vf_explained_var: 0.8697835206985474
      vf_loss: 0.9282601475715637
  load_time_ms: 1559.518
  num_steps_sampled: 4000
  num_steps_trained: 16000
  sample_time_ms: 50733.518
  update_time_ms: 7965.802
iterations_since_restore: 1
node_ip: 192.168.115.44
num_healthy_workers: 2
off_policy_estimator: {}
optimizer_steps_this_iter: 1
perf:
  cpu_util_percent: 42.091134751773055
  gpu_util_percent0: 0.0
  ram_util_percent: 19.48191489361702
  vram_util_percent0: 0.018997524752475247
pid: 18694
policy_reward_max:
  agent_policy: 81.6389846628336
  planner_policy: 49.71215188878208
policy_reward_mean:
  agent_policy: 32.62302051620128
  planner_policy: 39.03033342199973
policy_reward_min:
  agent_policy: 3.973990178464306
  planner_policy: 33.07639717949574
sampler_perf:
  mean_env_wait_ms: 2.0235866549876174
  mean_inference_ms: 2.470294874092504
  mean_processing_ms: 0.6184183414780414
time_since_restore: 212.63139653205872
time_this_iter_s: 212.63139653205872
time_total_s: 212.63139653205872
timestamp: 1664959878
timesteps_since_restore: 4000
timesteps_this_iter: 4000
timesteps_total: 4000
training_iteration: 1

2022-10-05 10:51:19,050 >> Wrote dense logs to: /home/ettore.saggiorato/ai-economist-ppo-decision-tree/ai-economist/tutorials/rllib/experiments/check/phase1_gpu/dense_logs/logs_0000000000004000
-- PPO Agents -- Steps done: 3
2022-10-05 10:53:56,233 Iter 2: steps this-iter 4000 total 8000 -> 7/5000 episodes done
2022-10-05 10:53:56,238 custom_metrics: {}
date: 2022-10-05_10-53-56
done: false
episode_len_mean: 1000.0
episode_reward_max: 422.5518206152326
episode_reward_mean: 248.1202300519397
episode_reward_min: 152.40912034622505
episodes_this_iter: 4
episodes_total: 7
experiment_id: 62f9b81a640b4b6a88f06f7b0eae0c2b
hostname: hpc-g04-node02.unitn.it
info:
  grad_time_ms: 148306.246
  learner:
    agent_policy:
      cur_kl_coeff: 0.0
      cur_lr: 0.0003000000142492354
      entropy: 1.9907374382019043
      entropy_coeff: 0.02500000037252903
      kl: 0.13330243527889252
      model: {}
      policy_loss: -0.19521287083625793
      total_loss: -0.2003142237663269
      vf_explained_var: 0.9206085205078125
      vf_loss: 0.8933419585227966
  load_time_ms: 1318.22
  num_steps_sampled: 8000
  num_steps_trained: 32000
  sample_time_ms: 31104.961
  update_time_ms: 3986.806
iterations_since_restore: 2
node_ip: 192.168.115.44
num_healthy_workers: 2
off_policy_estimator: {}
optimizer_steps_this_iter: 1
perf:
  cpu_util_percent: 56.03730569948187
  gpu_util_percent0: 0.0
  ram_util_percent: 22.500518134715026
  vram_util_percent0: 0.018997524752475244
pid: 18694
policy_reward_max:
  agent_policy: 101.40454248677307
  planner_policy: 146.96263418260136
policy_reward_mean:
  agent_policy: 44.65031125344134
  planner_policy: 69.51898503817472
policy_reward_min:
  agent_policy: 3.973990178464306
  planner_policy: 33.07639717949574
sampler_perf:
  mean_env_wait_ms: 2.055617041885937
  mean_inference_ms: 2.508564697228978
  mean_processing_ms: 0.6505569217304686
time_since_restore: 369.79533290863037
time_this_iter_s: 157.16393637657166
time_total_s: 369.79533290863037
timestamp: 1664960036
timesteps_since_restore: 8000
timesteps_this_iter: 4000
timesteps_total: 8000
training_iteration: 2

2022-10-05 10:53:56,406 >> Wrote dense logs to: /home/ettore.saggiorato/ai-economist-ppo-decision-tree/ai-economist/tutorials/rllib/experiments/check/phase1_gpu/dense_logs/logs_0000000000008000
-- PPO Agents -- Steps done: 7
=>> PBS: job killed: walltime 601 exceeded limit 600
*** Aborted at 1664960132 (unix time) try "date -d @1664960132" if you are using GNU date ***
PC: @                0x0 (unknown)
*** SIGTERM (@0xfe7c) received by PID 18694 (TID 0x2ac8bde8b3c0) from PID 65148; stack trace: ***
    @     0x2ac8be084630 (unknown)
    @     0x2ac8bea92bf9 syscall
2022-10-05 10:55:32,621	ERROR import_thread.py:93 -- ImportThread: Connection closed by server.
2022-10-05 10:55:32,622	ERROR worker.py:1092 -- listen_error_messages_raylet: Connection closed by server.
    @     0x2ac906adc479 nsync::nsync_mu_semaphore_p_with_deadline()
    @     0x2ac906adbab9 nsync::nsync_sem_wait_with_cancel_()
    @     0x2ac906ad90e3 nsync::nsync_cv_wait_with_deadline_generic()
    @     0x2ac906ad95e3 nsync::nsync_cv_wait_with_deadline()
    @     0x2ac905b5340b tensorflow::DirectSession::RunInternal()
    @     0x2ac905b54829 tensorflow::DirectSession::Run()
    @     0x2ac905b3d134 tensorflow::DirectSession::Run()
    @     0x2ac8f5e588c2 tensorflow::SessionRef::Run()
    @     0x2ac8f62b3f5e TF_Run_Helper()
    @     0x2ac8f62b4c28 TF_SessionRun
    @     0x2ac8f5e5201f tensorflow::TF_SessionRun_wrapper_helper()
    @     0x2ac8f5e520c2 tensorflow::TF_SessionRun_wrapper()
    @     0x2ac9299ce274 _ZZN8pybind1112cpp_function10initializeIZL32pybind11_init__pywrap_tf_sessionRNS_7module_EEUlP10TF_SessionP9TF_BufferRKNS_6handleERKSt6vectorI9TF_OutputSaISC_EERKSB_IP12TF_OperationSaISI_EES7_E15_NS_6objectEJS5_S7_SA_SG_SM_S7_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFT0_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE1_4_FUNES15_
    @     0x2ac9299b7c98 pybind11::cpp_function::dispatcher()
    @           0x46299c _PyCFunction_FastCallKeywords
    @           0x4fc23a _PyEval_EvalFrameDefault
    @           0x46217a function_code_fastcall
    @           0x4f79ff _PyEval_EvalFrameDefault
    @           0x501a88 _PyEval_EvalCodeWithName
    @           0x468f5f PyObject_Call
    @           0x4f91a4 _PyEval_EvalFrameDefault
    @           0x501a88 _PyEval_EvalCodeWithName
    @           0x4625aa _PyFunction_FastCallKeywords
    @           0x4f79ff _PyEval_EvalFrameDefault
    @           0x501ed8 _PyEval_EvalCodeWithName
    @           0x4625aa _PyFunction_FastCallKeywords
    @           0x4f79ff _PyEval_EvalFrameDefault
    @           0x46217a function_code_fastcall
    @           0x4f79ff _PyEval_EvalFrameDefault
    @           0x501a88 _PyEval_EvalCodeWithName
